"""Update traceability tables

Revision ID: 40157098b5ce
Revises: 82f2152b4ec2
Create Date: 2021-12-23 13:56:35.000447

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '40157098b5ce'
down_revision = '82f2152b4ec2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('change_values_bool',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.Boolean(), nullable=True),
    sa.Column('new_value', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_change_values_bool_id'), 'change_values_bool', ['id'], unique=False)
    op.create_table('change_values_date',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.Date(), nullable=True),
    sa.Column('new_value', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_change_values_date_id'), 'change_values_date', ['id'], unique=False)
    op.create_table('change_values_datetime',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.DateTime(timezone=True), nullable=True),
    sa.Column('new_value', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_change_values_datetime_id'), 'change_values_datetime', ['id'], unique=False)
    op.create_table('change_values_fk',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.Integer(), nullable=True),
    sa.Column('new_value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_change_values_fk_id'), 'change_values_fk', ['id'], unique=False)
    op.create_table('change_values_float',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.Float(), nullable=True),
    sa.Column('new_value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_change_values_float_id'), 'change_values_float', ['id'], unique=False)
    op.create_table('change_values_int',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.Integer(), nullable=True),
    sa.Column('new_value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_change_values_int_id'), 'change_values_int', ['id'], unique=False)
    op.create_table('change_values_str',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.String(), nullable=True),
    sa.Column('new_value', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_change_values_str_id'), 'change_values_str', ['id'], unique=False)
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('obj_id', sa.Integer(), nullable=True),
    sa.Column('obj', sa.Enum('SCHEMA', 'ENTITY', name='permobject'), nullable=False),
    sa.Column('type', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'READ', 'CREATE_ENTITIES', 'UPDATE_ENTITIES', 'DELETE_ENTITIES', name='permtype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('change_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('reviewed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'DECLINED', 'APPROVED', name='changestatus'), nullable=False),
    sa.Column('comment', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'permission_id')
    )
    op.create_table('user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'group_id')
    )
    op.create_table('user_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'permission_id')
    )
    op.drop_table('attr_create_history')
    op.drop_table('value_update_history')
    op.drop_table('attr_delete_history')
    op.drop_table('entity_create_history')
    op.drop_table('entity_update_history')
    op.drop_table('attr_upd_history')
    op.drop_table('schema_create_history')
    op.drop_table('schema_upd_history')
    op.add_column('changes', sa.Column('change_request_id', sa.Integer(), nullable=False))
    op.add_column('changes', sa.Column('attribute_id', sa.Integer(), nullable=True))
    op.add_column('changes', sa.Column('object_id', sa.Integer(), nullable=True))
    op.add_column('changes', sa.Column('value_id', sa.Integer(), nullable=False))

    content_type = postgresql.ENUM('ATTRIBUTE', 'ATTRIBUTE_DEFINITION', 'ENTITY', 'SCHEMA', name='contenttype')
    content_type.create(op.get_bind())

    op.add_column('changes', sa.Column('content_type', sa.Enum('ATTRIBUTE', 'ATTRIBUTE_DEFINITION', 'ENTITY', 'SCHEMA', name='contenttype'), nullable=False))
    
    change_attr_type = postgresql.ENUM('STR', 'BOOL', 'INT', 'FLOAT', 'FK', 'DT', 'DATE', name='changeattrtype')
    change_attr_type.create(op.get_bind())

    op.add_column('changes', sa.Column('field_name', sa.String(), nullable=True))
    op.add_column('changes', sa.Column('data_type', sa.Enum('STR', 'BOOL', 'INT', 'FLOAT', 'FK', 'DT', 'DATE', name='changeattrtype'), nullable=False))
    op.drop_constraint('changes_reviewed_by_user_id_fkey', 'changes', type_='foreignkey')
    op.drop_constraint('changes_created_by_user_id_fkey', 'changes', type_='foreignkey')
    op.create_foreign_key(None, 'changes', 'change_requests', ['change_request_id'], ['id'])
    op.create_foreign_key(None, 'changes', 'attributes', ['attribute_id'], ['id'])
    op.drop_column('changes', 'comment')
    op.drop_column('changes', 'status')
    op.drop_column('changes', 'created_at')
    op.drop_column('changes', 'change_object')
    op.drop_column('changes', 'reviewed_at')
    op.drop_column('changes', 'created_by_user_id')
    op.drop_column('changes', 'reviewed_by_user_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('changes', sa.Column('reviewed_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('changes', sa.Column('created_by_user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('changes', sa.Column('reviewed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('changes', sa.Column('change_object', postgresql.ENUM('SCHEMA', 'ENTITY', name='changeobject'), autoincrement=False, nullable=False))
    op.add_column('changes', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('changes', sa.Column('status', postgresql.ENUM('PENDING', 'DECLINED', 'APPROVED', name='changestatus'), autoincrement=False, nullable=False))
    op.add_column('changes', sa.Column('comment', sa.VARCHAR(length=1024), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'changes', type_='foreignkey')
    op.drop_constraint(None, 'changes', type_='foreignkey')
    op.create_foreign_key('changes_created_by_user_id_fkey', 'changes', 'users', ['created_by_user_id'], ['id'])
    op.create_foreign_key('changes_reviewed_by_user_id_fkey', 'changes', 'users', ['reviewed_by_user_id'], ['id'])
    op.drop_column('changes', 'data_type')
    op.drop_column('changes', 'field_name')
    op.drop_column('changes', 'content_type')
    op.drop_column('changes', 'value_id')
    op.drop_column('changes', 'object_id')
    op.drop_column('changes', 'attribute_id')
    op.drop_column('changes', 'change_request_id')
    op.create_table('schema_upd_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('schema_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('new_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('old_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('new_slug', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('old_slug', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('new_reviewable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('old_reviewable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('new_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('old_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], name='schema_upd_history_change_id_fkey'),
    sa.ForeignKeyConstraint(['schema_id'], ['schemas.id'], name='schema_upd_history_schema_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='schema_upd_history_pkey')
    )
    op.create_table('schema_create_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('reviewable', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], name='schema_create_history_change_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='schema_create_history_pkey')
    )
    op.create_table('attr_upd_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('attribute_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('new_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('unique', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('list', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('key', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('bind_to_schema', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.id'], name='attr_upd_history_attribute_id_fkey'),
    sa.ForeignKeyConstraint(['bind_to_schema'], ['schemas.id'], name='attr_upd_history_bind_to_schema_fkey'),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], name='attr_upd_history_change_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attr_upd_history_pkey')
    )
    op.create_table('entity_update_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('new_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('new_slug', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('old_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('old_slug', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('new_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('old_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], name='entity_update_history_change_id_fkey'),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], name='entity_update_history_entity_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='entity_update_history_pkey')
    )
    op.create_table('entity_create_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('schema_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], name='entity_create_history_change_id_fkey'),
    sa.ForeignKeyConstraint(['schema_id'], ['schemas.id'], name='entity_create_history_schema_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='entity_create_history_pkey')
    )
    op.create_table('attr_delete_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('attribute_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.id'], name='attr_delete_history_attribute_id_fkey'),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], name='attr_delete_history_change_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attr_delete_history_pkey')
    )
    op.create_table('value_update_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('attribute_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('new_value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('old_value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.id'], name='value_update_history_attribute_id_fkey'),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], name='value_update_history_change_id_fkey'),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], name='value_update_history_entity_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='value_update_history_pkey')
    )
    op.create_table('attr_create_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('change_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('STR', 'BOOL', 'INT', 'FLOAT', 'FK', 'DT', 'DATE', name='attrtype'), autoincrement=False, nullable=False),
    sa.Column('required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('unique', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('list', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('key', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('bind_to_schema', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bind_to_schema'], ['schemas.id'], name='attr_create_history_bind_to_schema_fkey'),
    sa.ForeignKeyConstraint(['change_id'], ['changes.id'], name='attr_create_history_change_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attr_create_history_pkey')
    )
    op.drop_table('user_permissions')
    op.drop_table('user_groups')
    op.drop_table('group_permissions')
    op.drop_table('change_requests')
    op.drop_table('permissions')
    op.drop_table('groups')
    op.drop_index(op.f('ix_change_values_str_id'), table_name='change_values_str')
    op.drop_table('change_values_str')
    op.drop_index(op.f('ix_change_values_int_id'), table_name='change_values_int')
    op.drop_table('change_values_int')
    op.drop_index(op.f('ix_change_values_float_id'), table_name='change_values_float')
    op.drop_table('change_values_float')
    op.drop_index(op.f('ix_change_values_fk_id'), table_name='change_values_fk')
    op.drop_table('change_values_fk')
    op.drop_index(op.f('ix_change_values_datetime_id'), table_name='change_values_datetime')
    op.drop_table('change_values_datetime')
    op.drop_index(op.f('ix_change_values_date_id'), table_name='change_values_date')
    op.drop_table('change_values_date')
    op.drop_index(op.f('ix_change_values_bool_id'), table_name='change_values_bool')
    op.drop_table('change_values_bool')
    # ### end Alembic commands ###
